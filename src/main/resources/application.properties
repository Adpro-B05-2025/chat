# Chat Service Configuration
spring.application.name=chat-service

# Database configuration
spring.datasource.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/chatdb}
spring.datasource.username=${DATASOURCE_USERNAME:panda}
spring.datasource.password=${DATASOURCE_PASSWORD:panda123}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JWT configuration (should match auth-profile service)
pandacare.app.jwtSecret=${JWT_SECRET:defaultSecretKeyForDevelopmentOnly}
pandacare.app.jwtExpirationMs=${JWT_EXPIRATION_MS:86400000}

# Auth Profile Service URL
authprofile.service.url=${AUTH_PROFILE_URL:http://localhost:8081/api}

# Active profile
spring.profiles.active=dev

# Logging configuration
logging.level.org.springframework.security=DEBUG
logging.level.id.ac.ui.cs.advprog.chat=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

# WebSocket configuration
spring.websocket.sockjs.client-library-url=https://cdn.jsdelivr.net/npm/sockjs-client@1/dist/sockjs.min.js

# CORS configuration
cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000

management.endpoints.web.exposure.include=health,info,prometheus
management.endpoint.health.show-details=always
management.metrics.tags.application=${spring.application.name}
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

server.address=0.0.0.0
server.port=8082

# Disable security for actuator endpoints (if needed)
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET,POST

# If using Spring Security, configure it to ignore actuator endpoints
spring.security.ignored=/actuator/**